version: "3.4"

services:
  gateway:
    image: $PHRASEANET_DOCKER_REGISTRY/phraseanet-nginx:$PHRASEANET_DOCKER_TAG
    restart: on-failure
    volumes:
        - data_vol:/var/data
        - custom_vol:/var/alchemy/www/custom:rw
    depends_on:
      - phraseanet
    ports:
      - ${PHRASEANET_APP_PORT}:80

  phraseanet:
    image: $PHRASEANET_DOCKER_REGISTRY/phraseanet:$PHRASEANET_DOCKER_TAG
    restart: on-failure
    depends_on:
      - db
      - redis
      - rabbitmq
      - elasticsearch
    volumes:
      - data_vol:/var/alchemy/Phraseanet/datas:rw
      - config_vol:/var/alchemy/Phraseanet/config:rw
      - tmp_vol:/var/alchemy/Phraseanet/tmp:rw
      - tmp_locks_vol:/var/alchemy/Phraseanet/tmp/locks:rw
      - tmp_caption_vol:/var/alchemy/Phraseanet/tmp/caption:rw
      - tmp_lazaret_vol:/var/alchemy/Phraseanet/tmp/lazaret:rw
      - tmp_download_vol:/var/alchemy/Phraseanet/tmp/download:rw
      # @TODO : waiting for a resolution
      - resources_proxy:/var/alchemy/Phraseanet/resources/proxies:rw
      - logs_vol:/var/alchemy/Phraseanet/logs:rw

  worker:
    image: $PHRASEANET_DOCKER_REGISTRY/phraseanet:$PHRASEANET_DOCKER_TAG
    restart: on-failure
    depends_on:
      - db
      - redis
      - rabbitmq
      - elasticsearch
    entrypoint: []
    command:
    - "/usr/bin/supervisord"
    - "-n"
    - "-c"
    - "/etc/supervisor/supervisord.conf"
    volumes:
      - data_vol:/var/alchemy/Phraseanet/datas:rw
      - logs_vol:/var/alchemy/Phraseanet/logs:rw

  db:
    image: $PHRASEANET_DOCKER_REGISTRY/phraseanet-db:$PHRASEANET_DOCKER_TAG
    restart: on-failure
    environment:
      - MYSQL_ROOT_PASSWORD
    volumes:
     - db_vol:/var/lib/mysql

  rabbitmq:
    image: rabbitmq:3-management
    restart: on-failure
    environment:
      - RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS

  redis:
    image: redis
    restart: on-failure

  elasticsearch:
    image: $PHRASEANET_DOCKER_REGISTRY/phraseanet-elasticsearch:$PHRASEANET_DOCKER_TAG
    build: ./elasticsearch
    restart: on-failure
    volumes:
      - elasticsearch_vol:/usr/share/elasticsearch/data

volumes:
  data_vol:
    driver: local
  tmp_vol:
    driver: local
  tmp_locks_vol:
    driver: local
  tmp_caption_vol:
    driver: local
  tmp_lazaret_vol:
    driver: local
  tmp_download_vol:
    driver: local
  db_vol:
    driver: local
  elasticsearch_vol:
    driver: local
  dev_vol:
    driver: local
  config_vol:
    driver: local
  custom_vol:
    driver: local
  # to be replacer by stdout/stderr
  logs_vol:
    driver: local
  # @TODO : waiting for a resolution
  resources_proxy:
    driver: local
